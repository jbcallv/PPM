{"name": "HumanEval_9_rolling_max", "language": "py", "prompt": "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n    \"\"\" From a given list of integers, is a an of rolling set element found until given moment\n    in the sequence.\n    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n", "tests": "def check(candidate):\n    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n", "completions": ["    max_so_far = numbers[0]\n    max_so_far_index = 0\n    max_value = [max_so_far] * len(numbers)\n    for index, value in enumerate(numbers):\n        max_so_far = max(max_so_far, value)\n        max_value[index] = max_so_far\n        if max_so_far == value:\n            max_so_far_index = index\n    for index in range(max_so_far_index + 1, len(numbers)):\n        max_value[index] = max_so_far\n    return max_value\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}