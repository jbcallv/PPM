{"name": "HumanEval_135_can_arrange", "language": "py", "prompt": "from typing import List\n\ndef can_arrange(arr: List[int]) -> int:\n    \"\"\"Create a list which returns the largest index of an list which\n    is not greater than or equal to the element immediately preceding it. If\n    no such element exists then return -1. The given element will not contain\n    duplicate values.\n\n    Examples:\n    >>> can_arrange([1, 2, 4, 3, 5])\n    3\n    >>> can_arrange([1, 2, 3])\n    -1\n    \"\"\"\n", "tests": "def check(candidate):\n    assert candidate([1, 2, 4, 3, 5]) == 3\n    assert candidate([1, 2, 4, 5]) == -1\n    assert candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n    assert candidate([4, 8, 5, 7, 3]) == 4\n    assert candidate([]) == -1\n\ndef test_check():\n    check(can_arrange)\n\ntest_check()\n", "completions": ["\n    seen = {}\n\n    for i, v in enumerate(arr):\n        if v in seen:\n            return seen[v]\n        else:\n            seen[v - min(arr)] = i\n\n    return -1\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}