{"name": "carlosp420_primer-designer_PrimerDesigner.choose_best_amplicon", "language": "py", "prompt": "def choose_best_amplicon(self, amplicon_tuples):\n        \"\"\"Iterates over amplicon greater and returns the one with , quality\n        and better length.\n        \"\"\"", "tests": "", "completions": ["\n        amplicon_tuples = list(amplicon_tuples)\n        sorted_tuples = sorted(amplicon_tuples, key=lambda x: (x[1], x[0]), reverse=True)\n        best_amplicon_tuple = sorted_tuples[0]\n        return best_amplicon_tuple\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}