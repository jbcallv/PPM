{"name": "ianmiell_shutit_ShutIt.parse_args", "language": "py", "prompt": "def parse_args(self):\n\t\tr\"\"\"Responsible for parsing arguments from the command line.\n\n\t\tEnvironment variables:\n\t\tSHUTIT_OPTIONS:\n\t\tLoads command line options from the stack (if set).\n\t\tBehaves like GREP_OPTIONS:\n\t\t\t- space separated list of arguments\n\t\t\t- arguments before a space escapes the space separation\n\t\t\t- backslash before a backslash is interpreted as a single backslash\n\t\t\t- all other options are treated literally\n\t\teg ' a\\ b c\\\\ \\\\d \\\\\\e\\' becomes '', 'a b', 'c\\', '\\d', '\\\\e\\'\n\t\tSHUTIT_OPTIONS is ignored if we are creating a skeleton\n\t\t\"\"\"", "tests": "", "completions": ["\n\t\tif self.cfg['skeleton']:\n\t\t\treturn\n\t\tif self.cfg['build']['interactive']:\n\t\t\treturn\n\t\t# Defaults to empty string\n\t\tshutit_options_str = os.environ.get('SHUTIT_OPTIONS', '')\n\t\tshutit_options_list = []\n\t\t# TODO: why are we doing this?\n\t\tshutit_options_str = re.sub(r'\\s+','', shutit_options_str)\n\t\t# Split on spaces, but keep quoted spaces together.\n\t\t# This is for handling things like 'a b' 'c d' 'e f'\n\t\t# or a\\ b c\\\\ \\\\d \\\\\\e\n\t\t# The first argument would be '' and the rest would be 'a b', 'c d', 'e f'\n\t\t# We then have to re-split based on the spaces, which is why we have to\n\t\t# do it twice.\n\t\tshutit_options_list = re.findall(r'[^\"\\s]\\S*|\".+?\"', shutit_options_str)\n\t\tshutit_options_list = [re.findall(r'[^\"\\s]\\S*|\".+?\"', i) for i in shutit_options_list]\n\t\tshutit_options_list = [i for sublist in shutit_options_list for i in sublist]\n\t\t# Need to add backslashes before single quotes so they don't get interpreted.\n\t\tshutit_options_list = [i.replace(\"'\", \"\\\\'\") for i in shutit_options_list]\n\t\tshutit_options_list = [i.replace('\"', '\\\\\"') for i in shutit_options_list]\n\t\tshutit_options_list = [i.replace('\\\\\\\\', '\\\\') for i in shutit_options_list]\n\t\tshutit_options_list = [i.replace('\\\\ ', '\\\\') for i in shutit_options_list]\n\t\t# Now remove the backslashes.\n\t\tshutit_options_list = [i.replace('\\\\', '') for i in shutit_options_list]\n\t\t# Now remove single quotes.\n\t\tshutit_options_list = [i.replace(\"'\", '') for i in shutit_options_list]"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}