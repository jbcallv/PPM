{"name": "juju_python-libjuju_Machine._workaround_1695335", "language": "py", "prompt": "async def _workaround_1695335(self, delta, old, new, model):\n        \"\"\"\n        This is a (hacky) temporary work around for a bug in Juju where the\n        instance status and agent version fields don't get updated properly\n        by the AllWatcher.\n\n        Deltas never contain a value for `data['agent-status']['version']`,\n        and once the `instance-status` reaches `pending`, we no longer get\n        any updates for it (the deltas come in, but the `instance-status`\n        data is always the same after that).\n\n        To work around this, whenever a delta comes in for this machine, we\n        query FullStatus and use the data from there if and only if it's newer.\n        Luckily, the field on the `since` field does seem to be accurate.\n\n        \" https://bugs.launchpad.net/juju/+bug/1695335\n        \"\"\"", "tests": "", "completions": ["\n        if self.since < model.status.since:\n            self.since = model.status.since\n            self._cached = model.status\n\n        # now that the cached status is updated, let's see if it's still valid\n        # or if we need to update it with a full status\n        if self._cached.data['agent-status']['version'] == old.data['agent-status']['version']:\n            # the agent version hasn't changed, so we can use the cached status\n            # to update the delta\n            delta.data['agent-status'] = self._cached.data['agent-status']\n        else:\n            # the agent version has changed, so we have to do a full status\n            # update\n            self.log.debug(\n                \"Agent version changed from %s to %s, doing full status update\",\n                old.data['agent-status']['version'],\n                new.data['agent-status']['version'],\n            )\n            try:\n                full = await model.full_status()\n            except JujuAPIError as e:\n                if e.code == 'Model is not available':\n                    return\n                raise\n            self._cached = full\n            delta.data['agent-status'] = full.data['agent-status']\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}