{"name": "SeabornGames_Meta_func_frame", "language": "py", "prompt": "def func_frame(function_index, function_name=None):\n    \"\"\"\n    This will return the class_name and function_name of the\n    int traced back two functions.\n\n    :param function_index: int of how many frames back the program \n                           should look (2 will give the parent of the caller)\n    :param function_name: frame of what program to look for (should \n                           not be used with function_index\n    :return frame: this will return the frame of the calling function  \"\"\"", "tests": "", "completions": ["\n    if function_name is not None:\n        frame = inspect.currentframe().f_back.f_back\n        if frame.f_code.co_name == function_name:\n            return frame\n    elif function_index is not None:\n        frame = inspect.currentframe()\n        for i in range(function_index):\n            frame = frame.f_back\n        return frame\n    else:\n        return None\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}