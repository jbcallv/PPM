{"name": "iotile_coretools_convert_to_BuildError", "language": "py", "prompt": "def convert_to_BuildError(status, exc_info=None):\n    \"\"\"\n    Convert any return code a code Exception.\n\n    :Parameters:\n      - `status`: can either be a return return or an Exception.\n\n    The buildError.status we set here will normally be\n    used as the return status of the \"scons\" process.\n    \"\"\"", "tests": "", "completions": ["\n    if isinstance(status, Exception):\n        return status\n\n    # Don't convert BuildError objects into BuildError objects.\n    elif isinstance(status, BuildError):\n        return status\n\n    elif status:\n        # If we have an exit status, then let's use that.\n        return BuildError(status)\n\n    else:\n        # If we're here, then we have an exception info tuple.\n        exc_type, exc_value, exc_tb = exc_info\n        return BuildError(str(exc_value), exc_info=exc_info)\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}