{"name": "PyCQA_pylint_LoggingChecker._check_log_method", "language": "py", "prompt": "def _check_log_method(self, node, name):\n        \"\"\"Checks calls to logging.log(level, format, *format_args).\"\"\"", "tests": "", "completions": ["\n        if not isinstance(node, astroid.Call):\n            return\n\n        if isinstance(node.func, astroid.Attribute):\n            if node.func.attrname!= name:\n                return\n            func = node.func.expr\n        else:\n            if node.func.as_string()!= name:\n                return\n            func = node.func\n\n        if not isinstance(func, astroid.Name):\n            return\n\n        if func.name!= 'logging':\n            return\n\n        if len(node.args)!= 3:\n            return\n\n        if not isinstance(node.args[0], (astroid.Const, astroid.Name)):\n            return\n\n        if not isinstance(node.args[1], astroid.Const):\n            return\n\n        if not isinstance(node.args[2], astroid.List):\n            return\n\n        for element in node.args[2].elts:\n            if not isinstance(element, astroid.Const):\n                return\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}