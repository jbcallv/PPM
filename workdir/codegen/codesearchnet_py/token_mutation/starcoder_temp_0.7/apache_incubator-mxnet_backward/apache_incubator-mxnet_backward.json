{"name": "apache_incubator-mxnet_backward", "language": "py", "prompt": "def backward(heads, head_grads=None, retain_graph=False, train_mode=True): #pylint: disable=redefined-outer-name\n    \"\"\"Compute the gradients of heads w.r.t previously marked variables.\n\n    Parameters\n    ----------\n    heads: list or list of NDArray\n        Output NDArray(s)\n    head_grads: set or list of NDArray or None\n        Gradients with respect to heads.\n    train_mode: bool, optional\n        Whether to do backward for training or predicting.\n    \"\"\"", "tests": "", "completions": ["\n    if not train_mode:\n        return\n    if head_grads is None:\n        head_grads = [nd.empty(h.shape) for h in heads]\n    for h, g in zip(heads, head_grads):\n        h.backward(g)\n\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}