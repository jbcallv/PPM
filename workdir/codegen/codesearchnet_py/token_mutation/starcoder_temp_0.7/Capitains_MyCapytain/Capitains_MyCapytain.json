{"name": "Capitains_MyCapytain_DtsCitation.ingest", "language": "py", "prompt": "def ingest(cls, resource, root=None, **kwargs):\n        \"\"\" Ingest a dictionary of DTS Citation object (as parsed JSON-LD) and\n        creates the Citation Graph\n\n        :param resource: list of Citation objects from the\n            citation Collection Endpoint (as expanded JSON-LD)\n        :type resource: dict\n        :param root: Root of the citation tree\n        :type root: BaseCitationSet\n        :return:\n        \"\"\"", "tests": "", "completions": ["\n\n        if root is None:\n            root = cls()\n\n        for r in resource:\n            if \"citationType\" in r:\n                if r[\"citationType\"] == \"article\":\n                    root.add(ArticleCitation.from_jsonld(r))\n                if r[\"citationType\"] == \"book\":\n                    root.add(BookCitation.from_jsonld(r))\n            else:\n                root.add(Citation.from_jsonld(r))\n        return root\n\n    @classmethod\n    def from_jsonld(cls, resource):\n        \"\"\" Create a Citation Graph from JSON-LD\n\n        :param resource: JSON-LD of Citation Graph\n        :type resource: dict\n        :return: Citation Graph\n        :rtype: CitationSet\n        \"\"\"\n\n        return cls.ingest(resource[\"@graph\"], root=cls())\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}