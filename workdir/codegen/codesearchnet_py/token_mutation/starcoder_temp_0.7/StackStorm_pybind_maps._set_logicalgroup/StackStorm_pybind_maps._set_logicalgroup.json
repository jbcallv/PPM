{"name": "StackStorm_pybind_maps._set_logicalgroup", "language": "py", "prompt": "def _set_logicalgroup(self, v, load=False):\n    \"\"\"\n    Setter method for logicalgroup, mapped from YANG . /rbridge_id/maps/logicalgroup (list)\n    If this variable is read-only (config: false) in the\n    to YANG file, then _set_logicalgroup is considered as a private\n    method. Backends looking to populate this variable should\n    do so via calling thisObj._set_logicalgroup() directly.\n    \"\"\"", "tests": "", "completions": ["\n    if hasattr(v, \"_utype\"):\n      v = v._utype(v)\n    try:\n      t = YANGDynClass(v,base=YANGListType(\"name\",logicalgroup.logicalgroup, yang_name=\"logicalgroup\", rest_name=\"logicalgroup\", parent=self, is_container='list', user_ordered=False, path_helper=self._path_helper, yang_keys='name', extensions={u'tailf-common': {u'callpoint': u'map-logicalgroup', u'cli-suppress-show-path': None}}), is_container='list', yang_name=\"logicalgroup\", rest_name=\"logicalgroup\", parent=self, path_helper=self._path_helper, extmethods=self._extmethods, register_paths=True, extensions={u'tailf-common': {u'callpoint': u'map-logicalgroup', u'cli-suppress-show-path': None}}, namespace='urn:brocade.com:mgmt:brocade-maps', defining_module='brocade-maps', yang_type='list', is_config=True)\n    except (TypeError, ValueError):\n      raise ValueError({\n          'error-string': \"\"\"logicalgroup must be of a type compatible with list\"\"\",\n          'defined-type': \"list\",\n          'generated-type': \"\"\"YANGDynClass(base=YANGListType(\"name\",logicalgroup.logicalgroup, yang_name=\"logicalgroup\", rest_name=\"logicalgroup\", parent=self, is_container='list', user_ordered=False, path_helper=self._path_helper, yang_keys='name', extensions={u'tailf-common': {u'callpoint': u'map-logicalgroup', u'cli-suppress-show-path': None}}), is_container='list', yang_name=\"logicalgroup\", rest_name=\"logicalgroup\", parent=self, path_helper=self._path_helper, extmethods=self._extmethods, register_paths=True, extensions={u'tailf-common': {u'callpoint': u'map-logicalgroup', u'cli-suppress-show-path': None}}, namespace='urn:brocade.com:mgmt:brocade-maps', defining_module='brocade-maps', yang_type='list', is_config=True)\"\"\","], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}