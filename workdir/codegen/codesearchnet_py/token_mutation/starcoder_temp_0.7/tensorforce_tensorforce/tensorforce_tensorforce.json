{"name": "tensorforce_tensorforce_Optimizer.apply_step", "language": "py", "prompt": "def apply_step(self, variables, deltas):\n        \"\"\"\n        Applies the given (and already calculated) value deltas to the variable values.\n\n        Args:\n            variables: List of variables.\n            deltas: list of variables of same length.\n\n        Returns:\n            The step-applied operation. A tf.group of tf.assign_add ops.\n        \"\"\"", "tests": "", "completions": ["\n        return tf.group(*[tf.assign_add(v, d) for v, d in zip(variables, deltas)])\n\n    def _get_vars(self, variables):\n        \"\"\"\n        Helper method to get variables for a list of variable names.\n\n        Args:\n            variables: A list of variable names.\n\n        Returns:\n            A list of variables.\n        \"\"\"\n        return [self.get_variable(v) for v in variables]\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}