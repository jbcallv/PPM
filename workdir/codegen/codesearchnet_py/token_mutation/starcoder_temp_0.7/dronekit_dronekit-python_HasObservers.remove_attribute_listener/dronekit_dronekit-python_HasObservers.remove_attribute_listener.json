{"name": "dronekit_dronekit-python_HasObservers.remove_attribute_listener", "language": "py", "prompt": "def remove_attribute_listener(self, attr_name, observer):\n        \"\"\"\n        Remove an attribute listener (observer) that was previously added using :py:func:`add_attribute_listener`.\n\n        For example, the following line would remove a previously added vehicle 'global_frame'\n        observer called ``location_callback``:\n\n        .. code:: python\n\n            vehicle.remove_attribute_listener('global_frame', location_callback)\n\n        See :ref:`vehicle_state_observe_attributes` for object information.\n\n        :param String attr_name: The attribute name that is to have an observer removed (or '*' to remove an 'all attribute' observer).\n        :param observer: The callback more to remove.\n\n        \"\"\"", "tests": "", "completions": ["\n        if attr_name == 'all':\n            self._observers.remove(observer)\n        else:\n            if attr_name not in self._observers:\n                return\n            self._observers[attr_name].remove(observer)\n\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}