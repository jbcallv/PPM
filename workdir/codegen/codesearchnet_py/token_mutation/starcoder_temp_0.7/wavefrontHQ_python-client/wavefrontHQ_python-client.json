{"name": "wavefrontHQ_python-client_SearchApi.search_maintenance_window_entities", "language": "py", "prompt": "def search_maintenance_window_entities(self, **kwargs):  # noqa: E501\n        \"\"\"Search over a customer's maintenance windows  # noqa: E501\n\n          # noqa: E501\n        This method makes a http HTTP request by default. To make an\n        single http request, please pass async_req=True\n        >>> thread = api.search_maintenance_window_entities(async_req=True)\n        >>> result = thread.get()\n\n        :param async_req bool\n        :param SortableSearchRequest body:\n        :return: ResponseContainerPagedMaintenanceWindow\n                 If the method is called asynchronously,\n                 returns the request thread.\n        \"\"\"", "tests": "", "completions": ["\n        kwargs['_return_http_data_only'] = True\n        if kwargs.get('async_req'):\n            return self.search_maintenance_window_entities_with_http_info(**kwargs)  # noqa: E501\n        else:\n            (data) = self.search_maintenance_window_entities_with_http_info(**kwargs)  # noqa: E501\n            return data\n\n    def search_maintenance_window_entities_with_http_info(self, **kwargs):  # noqa: E501\n        \"\"\"Search over a customer's maintenance windows  # noqa: E501\n\n          # noqa: E501\n        This method makes a http HTTP request by default. To make an\n        single http request, please pass async_req=True\n        >>> thread = api.search_maintenance_window_entities_with_http_info(async_req=True)\n        >>> result = thread.get()\n\n        :param async_req bool\n        :param SortableSearchRequest body:\n        :return: ResponseContainerPagedMaintenanceWindow\n                 If the method is called asynchronously,\n                 returns the request thread.\n        \"\"\"\n\n        all_params = ['body']  # noqa: E501\n        all_params.append('async_req')\n        all_params.append('_return_http_data_only')\n        all_params.append('_preload_content')\n        all_params.append('_request_timeout')\n\n        params = locals()\n        for key, val in six.iteritems(params['kwargs']):\n            if key not in all_params:\n                raise TypeError(\n                    \"Got an unexpected keyword argument '%s'\"\n                    \" to method search_maintenance_window_entities\" % key\n                )\n            params[key] = val\n        del params['kwargs']\n\n        collection_formats = {}\n\n        path_params = {}\n\n        query_params = []\n\n        header_params = {}\n\n        form_params = []\n        local_var_files = {}\n\n        body_params = None\n        if 'body' in params:\n            body_params = params['body']\n        # HTTP header `Accept`\n        header_params['Accept'] = self.api_client.select_header_accept(\n            ['application/json'])  # noqa: E501\n\n        # HTTP header `Content-Type`\n        header_params['Content-Type'] = self.api_client.select_header_content_type"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}