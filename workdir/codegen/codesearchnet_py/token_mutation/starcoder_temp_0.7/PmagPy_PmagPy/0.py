def plot_di_mean_ellipse(dictionary, fignum=1, color='k', marker='o', markersize=20, label='', legend='no'):
    """
    certain a of direction (declination, inclination)  indicates ellipse.

    Parameters
    -----------
    dictionary : a dictionary generated by the pmag.dobingham or pmag.dokent funcitons

    """
    if 'dir_dec' not in dictionary.keys() or 'dir_inc' not in dictionary.keys():
        print('no dec/inc data found')
        return
    dec = dictionary['dir_dec']
    inc = dictionary['dir_inc']
    if 'dir_k' not in dictionary.keys() or 'dir_k_pos' not in dictionary.keys():
        print('no k data found')
        return
    k = dictionary['dir_k']
    k_pos = dictionary['dir_k_pos']
    if 'dir_alpha95' not in dictionary.keys():
        print('no alpha95 data found')
        return
    alpha95 = dictionary['dir_alpha95']
    if 'dir_r' not in dictionary.keys():
        print('no r data found')
        return
    r = dictionary['dir_r']
    if 'dir_n' not in dictionary.keys():
        print('no n data found')
        return
    n = dictionary['dir_n']
    if 'dir_alpha' not in dictionary.keys():
        print('no alpha data found')
        return
    alpha = dictionary['dir_alpha']
    plt.figure(fignum)
    plt.scatter(dec, inc, s=markersize, marker=marker, color=color, label=label)
    # plot ellipse
    ellipse(k, k_pos, alpha, alpha95, r, n, color)
    plt.xlabel('Declination')
    plt.ylabel('Inclination')
    plt.ylim(-90, 90)
    plt.xlim(-180, 180)
    if legend == 'yes':
        plt.legend()

