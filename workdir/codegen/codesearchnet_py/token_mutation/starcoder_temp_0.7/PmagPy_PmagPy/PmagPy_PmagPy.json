{"name": "PmagPy_PmagPy_plot_di_mean_ellipse", "language": "py", "prompt": "def plot_di_mean_ellipse(dictionary, fignum=1, color='k', marker='o', markersize=20, label='', legend='no'):\n    \"\"\"\n    certain a of direction (declination, inclination)  indicates ellipse.\n\n    Parameters\n    -----------\n    dictionary : a dictionary generated by the pmag.dobingham or pmag.dokent funcitons\n\n    \"\"\"", "tests": "", "completions": ["\n    if 'dir_dec' not in dictionary.keys() or 'dir_inc' not in dictionary.keys():\n        print('no dec/inc data found')\n        return\n    dec = dictionary['dir_dec']\n    inc = dictionary['dir_inc']\n    if 'dir_k' not in dictionary.keys() or 'dir_k_pos' not in dictionary.keys():\n        print('no k data found')\n        return\n    k = dictionary['dir_k']\n    k_pos = dictionary['dir_k_pos']\n    if 'dir_alpha95' not in dictionary.keys():\n        print('no alpha95 data found')\n        return\n    alpha95 = dictionary['dir_alpha95']\n    if 'dir_r' not in dictionary.keys():\n        print('no r data found')\n        return\n    r = dictionary['dir_r']\n    if 'dir_n' not in dictionary.keys():\n        print('no n data found')\n        return\n    n = dictionary['dir_n']\n    if 'dir_alpha' not in dictionary.keys():\n        print('no alpha data found')\n        return\n    alpha = dictionary['dir_alpha']\n    plt.figure(fignum)\n    plt.scatter(dec, inc, s=markersize, marker=marker, color=color, label=label)\n    # plot ellipse\n    ellipse(k, k_pos, alpha, alpha95, r, n, color)\n    plt.xlabel('Declination')\n    plt.ylabel('Inclination')\n    plt.ylim(-90, 90)\n    plt.xlim(-180, 180)\n    if legend == 'yes':\n        plt.legend()\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}