{"name": "saltstack_salt__verify_options", "language": "py", "prompt": "def _verify_options(options):\n    '''\n    Verify options and log warnings\n\n    Returns True if all options can be verified,\n    otherwise False\n    '''\n\n    # sanity check all vals used for bitwise operations later\n    bitwise_args = [('level', options['level']),\n                    ('facility', options['facility'])\n                    ]\n    bitwise_args.extend([('option', x) for x in options['options']])\n\n    for opt_name, x in bitwise_args:\n        if not hasattr(syslog, opt):\n            log.error('syslog has no attribute %s', opt)\n            return False\n        if not isinstance(getattr(syslog, opt), int):\n            log.error('%s is not a valid attribute %s', opt, opt_name)\n            return False\n\n    # Sanity check tag\n    if 'tag' in options:\n        if not isinstance(options['tag'], six.string_types):\n            log.error('tag must be a string')\n            return False\n        if len(options['tag']) > 32:\n            log.error('tag size is limited to 32 characters')\n            return False\n\n    return True", "tests": "", "completions": ["\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}