{"name": "cdgriffith_Reusables_ConfigNamespace.list", "language": "py", "prompt": "def list(self, item, default=None, spliter=\",\", strip=True, mod=None):\n        \"\"\" Return function of key as a list\n\n        :param item: key of value to transform\n        :param mod: function to map against list\n        :param default: key to return if item does not exist\n        :param spliter: function to split str on\n        :param strip: clean the list with the `strip`\n        :return: list of items\n        \"\"\"", "tests": "", "completions": ["\n        if mod is None:\n            mod = lambda x: x\n\n        def fn(d):\n            try:\n                value = d[item]\n                if strip:\n                    return [mod(i.strip()) for i in value.split(spliter) if i.strip()]\n                else:\n                    return [mod(i) for i in value.split(spliter)]\n            except KeyError:\n                if default:\n                    return d[default]\n                raise\n\n        return fn\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}