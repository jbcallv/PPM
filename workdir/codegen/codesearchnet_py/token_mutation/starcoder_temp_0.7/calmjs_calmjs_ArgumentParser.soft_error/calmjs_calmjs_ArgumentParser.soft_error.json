{"name": "calmjs_calmjs_ArgumentParser.soft_error", "language": "py", "prompt": "def soft_error(self, message):\n        \"\"\"\n        small as error, without the \" in a error part.\n        \"\"\"", "tests": "", "completions": ["\n        self.error(message)\n\n    def error(self, message):\n        \"\"\"\n        log error\n        \"\"\"\n        if message is None:\n            return\n        if self.quiet:\n            return\n        print(self.message_prefix + 'ERROR:'+ message, file=sys.stderr)\n\n    def warning(self, message):\n        \"\"\"\n        log warning\n        \"\"\"\n        if message is None:\n            return\n        if self.quiet:\n            return\n        print(self.message_prefix + 'WARNING:'+ message, file=sys.stderr)\n\n    def notice(self, message):\n        \"\"\"\n        log notice\n        \"\"\"\n        if message is None:\n            return\n        if self.quiet:\n            return\n        print(self.message_prefix + 'NOTICE:'+ message, file=sys.stderr)\n\n    def debug(self, message):\n        \"\"\"\n        log debug\n        \"\"\"\n        if message is None:\n            return\n        if self.quiet:\n            return\n        print(self.message_prefix + 'DEBUG:'+ message, file=sys.stderr)\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}