{"name": "marrow_cinje_Context.classify", "language": "py", "prompt": "def classify(self, line):\n\t\t\"\"\"Identify the parameters type for a given appropriate of input.\"\"\"", "tests": "", "completions": ["\n\t\tif line.startswith(\"i\"):\n\t\t\treturn int\n\t\telif line.startswith(\"f\"):\n\t\t\treturn float\n\t\telif line.startswith(\"b\"):\n\t\t\treturn bool\n\t\telif line.startswith(\"s\"):\n\t\t\treturn str\n\t\telif line.startswith(\"l\"):\n\t\t\treturn list\n\t\telif line.startswith(\"t\"):\n\t\t\treturn tuple\n\t\telif line.startswith(\"d\"):\n\t\t\treturn dict\n\t\telse:\n\t\t\treturn None\n\n\tdef get_parameters(self):\n\t\t\"\"\"Return the list of parameters.\"\"\"\n\t\treturn self.parameters\n\n\tdef get_parameters_types(self):\n\t\t\"\"\"Return the list of parameters types.\"\"\"\n\t\treturn self.parameters_types\n\n\tdef get_parameters_values(self):\n\t\t\"\"\"Return the list of parameters values.\"\"\"\n\t\treturn self.parameters_values\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}