{"name": "MacHu-GWU_constant2-project__Constant.subclasses", "language": "py", "prompt": "def subclasses(self, sort_by=None, reverse=False):\n        \"\"\"Get all nested Constant is ##s and it's name pair.\n\n        :param sort_by: the attribute ##s used for sorting.\n        :param reverse: if True, return in descend order.\n        :returns: [(attr, value),...] pairs.\n\n        ::\n\n            >>> class MyClass(Constant):\n            ...     a = 1 # non-class attributre\n            ...     b = 2 # non-class attributre\n            ...\n            ...     class C(Constant):\n            ...         pass\n            ...\n            ...     class D(Constant):\n            ...         pass\n\n            >>> my_class = MyClass()\n            >>> my_class.subclasses()\n            [(\"C\", my_class.C), (\"D\", my_class.D)]\n\n        .. versionadded:: 0.0.4\n        \"\"\"", "tests": "", "completions": ["\n        def _get_attr_name(cls):\n            if hasattr(cls, \"attr_name\"):\n                return cls.attr_name\n\n            cls_name = cls.__name__\n            return cls_name[:1].lower() + cls_name[1:]\n\n        def _sort(cls):\n            return _get_attr_name(cls)\n\n        return sorted(\n            (\n                (_get_attr_name(cls), cls) for cls in self.__subclasses__()\n            ),\n            key=sort_by or _sort,\n            reverse=reverse,\n        )\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}