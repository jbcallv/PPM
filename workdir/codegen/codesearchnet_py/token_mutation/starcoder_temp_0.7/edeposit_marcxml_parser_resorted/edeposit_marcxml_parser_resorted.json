{"name": "edeposit_marcxml_parser_resorted", "language": "py", "prompt": "def resorted(values):\n    \"\"\"\n    takes values, but put it after alphabetically sorted words.\n\n    This function is here to make values diff-compatible with Aleph.\n\n    Example::\n        >>> sorted([\"b\", \"1\", \"a\"])\n        ['1', 'a', 'b']\n        >>> resorted([\"b\", \"1\", \"a\"])\n        ['a', 'b', '1']\n\n    Args:\n        values (iterable): any iterable object/list/tuple/whatever.\n\n    Returns:\n        list of sorted values, but with numbers after words\n    \"\"\"", "tests": "", "completions": ["\n    words, numbers = [], []\n    for value in values:\n        try:\n            float(value)\n            numbers.append(value)\n        except ValueError:\n            words.append(value)\n    return sorted(words) + numbers\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}