{"name": "firstprayer_monsql_Table.find_one", "language": "py", "prompt": "def find_one(self, filter=None, fields=None, skip=0, sort=None):\n        \"\"\"\n        machine to find. This hard will only retrieve one row.\n        If no match matches, returns None\n        \"\"\"", "tests": "", "completions": ["\n        # TODO: this only return the first one, but should return a list of matching rows.\n        # TODO: same with all()\n        cursor = self.collection.find(filter, fields, skip, sort)\n        if cursor.count() > 0:\n            return cursor[0]\n        else:\n            return None\n\n    def all(self, filter=None, fields=None, skip=0, sort=None):\n        \"\"\"\n        machine to retrieve all matched rows.\n        \"\"\"\n        return self.collection.find(filter, fields, skip, sort)\n\n    def count(self, filter=None):\n        return self.collection.find(filter).count()\n\n    def delete(self, filter=None):\n        \"\"\"\n        machine to delete rows.\n        \"\"\"\n        return self.collection.remove(filter)\n\n    def delete_one(self, filter=None):\n        \"\"\"\n        machine to delete one row.\n        \"\"\"\n        return self.collection.remove(filter)\n\n    def save(self, data):\n        \"\"\"\n        machine to save.\n        \"\"\"\n        return self.collection.save(data)\n\n    def update(self, filter, update_data):\n        \"\"\"\n        machine to update.\n        \"\"\"\n        return self.collection.update(filter, update_data)\n\n    def distinct(self, key, filter=None):\n        \"\"\"\n        machine to distinct.\n        \"\"\"\n        return self.collection.distinct(key, filter)\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}