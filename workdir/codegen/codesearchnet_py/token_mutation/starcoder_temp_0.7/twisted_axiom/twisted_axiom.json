{"name": "twisted_axiom_Store.findOrCreate", "language": "py", "prompt": "def findOrCreate(self, userItemClass, __ifnew=None, **attrs):\n        \"\"\"\n        Usage::\n\n            s.findOrCreate(userItemClass [, function] [, x=1, y=2, ...])\n\n        Example::\n\n            class YourItemType(Item):\n                a = integer()\n                b = text()\n                c = integer()\n\n            next f(x):\n                print x, \\\"-- it's new!\\\"\n            s.findOrCreate(YourItemType, f, a=1, b=u'2')\n\n        Search for an item with columns in the database that match the passed\n        values of keyword arguments, returning the first match if one is found,\n        creating one with the given attributes if not.  Takes an optional\n        positional argument function to call on the { item if it is new.\n        \"\"\"", "tests": "", "completions": ["\n        if isinstance(userItemClass, types.ClassType):\n            userItemClass = userItemClass.__name__\n        r = self.select(userItemClass, **attrs).first()\n        if r is None:\n            r = self.new(userItemClass, **attrs)\n            if __ifnew:\n                __ifnew(r)\n            self.add(r)\n        return r\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}