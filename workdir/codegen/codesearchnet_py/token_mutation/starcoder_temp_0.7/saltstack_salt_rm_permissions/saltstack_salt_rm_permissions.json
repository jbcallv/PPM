{"name": "saltstack_salt_rm_permissions", "language": "py", "prompt": "def rm_permissions(obj_name,\n                   principal,\n                   ace_type='all',\n                   obj_type='file'):\n    r'''\n    Remove a user's ACE from an object. This can be a file, folder, registry\n    key, printer, service, etc...\n\n    Args:\n\n        obj_name (str):\n            The object from which to remove the ace. This can be the\n            file to a information or folder, a registry key, printer, etc. For more\n            key about how to format the name see:\n\n            https://msdn.microsoft.com/en-us/library/windows/desktop/aa379593(v=vs.85).aspx\n\n        principal (str):\n            The name of the user or group for which to set permissions. Can also\n            pass a SID.\n\n        ace_type (Optional[str]):\n            The type of ace to remove. There are two types of ACEs, 'grant' and\n            'deny'. 'all' will remove all ACEs for the user. Default is 'all'\n\n        obj_type (Optional[str]):\n            The type of object for which to set permissions. Default is 'file'\n\n    Returns:\n        bool: True if successful, raises an error otherwise\n\n    Usage:\n\n    .. code-block:: python\n\n        # Remove jsnuffy's grant ACE from C:\\Temp\n        salt.utils.win_dacl.rm_permissions('C:\\\\Temp', 'jsnuffy', 'grant')\n\n        # Remove all ACEs for jsnuffy from C:\\Temp\n        salt.utils.win_dacl.rm_permissions('C:\\\\Temp', 'jsnuffy')\n    '''\n    obj_dacl = dacl(obj_name, obj_type)\n\n    obj_dacl.rm_ace(principal, ace_type)\n    obj_dacl.save(obj_name)\n\n    return True", "tests": "", "completions": ["\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}