{"name": "YeoLab_anchor_cross_phenotype_jsd", "language": "py", "prompt": "def cross_phenotype_jsd(data, groupby, bins, n_iter=100):\n    \"\"\"Jensen-Shannon divergence of based across phenotypes\n\n    Parameters\n    ----------\n    data : pandas.DataFrame\n        A (n_samples, n_features) Dataframe\n    groupby : mappable\n        A samples to phenotypes mapping\n    n_iter : int\n        number of bootstrap resampling iterations to perform for the\n        within-group comparisons\n    n_bins : int\n        Number of bins to binify the singles features on\n\n    Returns\n    -------\n    jsd_df : pandas.DataFrame\n        A (n_features, n_phenotypes^2) dataframe of the JSD between each\n        feature between and within phenotypes\n    \"\"\"", "tests": "", "completions": ["\n    if len(groupby)!= data.shape[0]:\n        raise ValueError('groupby must have same length as number of samples')\n\n    if len(set(groupby)) < len(groupby):\n        raise ValueError('groupby must be unique')\n\n    groupby = pd.Series(groupby)\n\n    if isinstance(bins, int):\n        bins = bins * np.ones(data.shape[1], dtype=int)\n\n    if data.shape[1]!= len(bins):\n        raise ValueError('data and bins must have same number of features')\n\n    jsd_df = pd.DataFrame()\n    for i in range(data.shape[1]):\n        x = data.iloc[:, i].values\n        jsd_df[i] = jsd_bins(x, bins[i], groupby, n_iter=n_iter)\n\n    return jsd_df\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}