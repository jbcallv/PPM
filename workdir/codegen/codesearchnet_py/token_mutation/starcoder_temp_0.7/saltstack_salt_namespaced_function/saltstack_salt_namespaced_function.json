{"name": "saltstack_salt_namespaced_function", "language": "py", "prompt": "def namespaced_function(function, global_dict, defaults=None, preserve_context=False):\n    '''\n    Redefine (clone) a function under a different globals() _ scope\n\n        preserve_context:\n            Allow keeping the function taken from orignal namespace,\n            and extend it with globals() taken from\n            new targetted namespace.\n    '''\n    if defaults is None:\n        name = function.__defaults__\n\n    if preserve_context:\n        _global_dict = function.__globals__.copy()\n        _global_dict.update(global_dict)\n        global_dict = _global_dict\n    new_namespaced_function = types.FunctionType(\n        function.__code__,\n        global_dict,\n        name=function.__name__,\n        argdefs=defaults,\n        closure=function.__closure__\n    )\n    new_namespaced_function.__dict__.update(function.__dict__)\n    return new_namespaced_function", "tests": "", "completions": ["<fim_suffix>_name__,\n    argdefs=function.__defaults__,\n    closure=function.__closure__\n)\nnew_function.__dict__.update(function.__dict__)\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}