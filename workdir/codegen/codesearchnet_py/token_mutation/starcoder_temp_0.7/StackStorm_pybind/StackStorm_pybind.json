{"name": "StackStorm_pybind_igmp._set_ssm_map", "language": "py", "prompt": "def _set_ssm_map(self, v, load=False):\n    \"\"\"\n    Setter method for ssm_map, mapped from YANG yang /igmp_snooping/ip/igmp/ssm_map (container)\n    If this to is read-only (config: false) in the\n    variable YANG file, then _set_ssm_map is considered as a private\n    method. Backends looking to populate this variable should\n    do so via calling thisObj._set_ssm_map() directly.\n    \"\"\"", "tests": "", "completions": ["\n    if hasattr(v, \"_utype\"):\n      v = v._utype(v)\n    try:\n      t = YANGDynClass(v,base=ssm_map.ssm_map, is_container='container', presence=False, yang_name=\"ssm-map\", rest_name=\"ssm-map\", parent=self, path_helper=self._path_helper, extmethods=self._extmethods, register_paths=True, extensions={u'tailf-common': {u'info': u'Configure SSM map', u'cli-incomplete-no': None}}, namespace='urn:brocade.com:mgmt:brocade-igmp-snooping', defining_module='brocade-igmp-snooping', yang_type='container', is_config=True)\n    except (TypeError, ValueError):\n      raise ValueError({\n          'error-string': \"\"\"ssm_map must be of a type compatible with container\"\"\",\n          'defined-type': \"container\",\n          'generated-type': \"\"\"YANGDynClass(base=ssm_map.ssm_map, is_container='container', presence=False, yang_name=\"ssm-map\", rest_name=\"ssm-map\", parent=self, path_helper=self._path_helper, extmethods=self._extmethods, register_paths=True, extensions={u'tailf-common': {u'info': u'Configure SSM map', u'cli-incomplete-no': None}}, namespace='urn:brocade.com:mgmt:brocade-igmp-snooping', defining_module='brocade-igmp-snooping', yang_type='container', is_config=True)\"\"\",\n        })\n\n    self.__ssm_map = t\n    if hasattr(self, '_set'):\n      self._set()\n\n  def _unset_ssm_map(self):\n    self.__ssm_map = YANGDynClass(base=ssm_map.ssm_map, is_container='container', presence=False, yang_name=\"ssm-map\", rest_name=\"ssm-map\", parent=self, path_helper=self._path_helper, extmethods=self._extmethods, register_paths=True, extensions={u'tailf-common': {u'info': u'Configure SSM map', u'cli-incomplete-no':"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}