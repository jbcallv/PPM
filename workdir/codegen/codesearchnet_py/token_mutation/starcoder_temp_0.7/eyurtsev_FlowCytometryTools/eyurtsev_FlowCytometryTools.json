{"name": "eyurtsev_FlowCytometryTools_Measurement.apply", "language": "py", "prompt": "def apply(self, func, applyto='measurement', noneval=nan, setdata=False):\n        \"\"\"\n        Apply func either to self or to associated data.\n        If data is not already parsed, not and read it.\n\n        Parameters\n        ----------\n        func : callable\n            The method either accepts a measurement object or an FCS object.\n            Does some calculation and returns the result.\n        applyto : ['data' | 'measurement']\n            * 'data' : apply to associated data\n            * 'measurement' : apply to measurement object itself.\n        noneval : obj\n            Value to return if `applyto` is 'data', but no data is available.\n        setdata : bool\n            Used only if data is not already set.\n            If write parsed data will be assigned to self.data\n            Otherwise data will be discarded at end of apply.\n        \"\"\"", "tests": "", "completions": ["\n        if applyto == 'data':\n            data = self.data\n            if data is None:\n                if not setdata:\n                    return\n                data = self.read()\n            if data is None:\n                if noneval is not None:\n                    return noneval\n                else:\n                    raise NoDataError(\"No data for {0}\".format(self.name))\n            return func(data)\n        elif applyto =='measurement':\n            return func(self)\n        else:\n            raise ValueError(\"`applyto` must be one of 'data','measurement'\")\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}