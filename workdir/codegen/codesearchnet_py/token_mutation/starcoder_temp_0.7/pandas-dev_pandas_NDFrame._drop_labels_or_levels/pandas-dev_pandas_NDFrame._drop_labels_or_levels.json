{"name": "pandas-dev_pandas_NDFrame._drop_labels_or_levels", "language": "py", "prompt": "def _drop_labels_or_levels(self, keys, axis=0):\n        \"\"\"\n        Drop labels and/or levels for the given `axis`.\n\n        For each key in `keys`:\n          - (axis=0): If key matches a column label then drop the column.\n            Otherwise if key matches an index level then drop the level.\n          - (axis=1): If key matches an index label then drop the row.\n            Otherwise if key matches a column level then drop the level.\n\n        Parameters\n        ----------\n        keys: str or list of str\n            labels or levels to drop\n        axis: int, default 0\n            Axis that levels are associated with (0 for index, 1 for columns)\n\n        Returns\n        -------\n        dropped: DataFrame\n\n        Raises\n        ------\n        ValueError\n            if any `keys` match neither a key nor a level\n        \"\"\"", "tests": "", "completions": ["\n        # TODO: should this be the default behavior?\n        #       (and should we warn if it's not)\n        axis = validate_axis(axis)\n\n        dropped = self.copy()\n        for k in com._iter_drop_labels(keys, axis, self.index, self.columns):\n            dropped = dropped._drop_axis(k, axis)\n        return dropped\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}