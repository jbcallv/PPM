{"name": "faucamp_python-gsmmodem_GsmModem.listStoredSms", "language": "py", "prompt": "def listStoredSms(self, status=Sms.STATUS_ALL, memory=None, delete=False):\n        \"\"\" Returns SMS messages currently stored on the device/SIM card.\n        \n        The messages are read from the memory set by the \"memory\" parameter.\n        \n        :param status: Filter messages based on this read status; must be 0-4 (see Sms class)\n        :type status: int\n        :param memory: The memory type to read from. If None, use the current default messages read memory\n        :type memory: str or None\n        :param delete: If True, delete returned messages from the device/SIM card\n        :type delete: bool\n        \n        :return: A list of Sms . containing the messages read\n        :rtype: list\n        \"\"\"", "tests": "", "completions": ["\n        \n        if not memory:\n            memory = self.defaultSmsReadMemory\n        \n        result = []\n        \n        messageIds = self.listStoredSmsIds(status, memory)\n        \n        for messageId in messageIds:\n            result.append(self.getStoredSms(messageId, delete))\n        \n        return result\n    \n    \n    def listStoredSmsIds(self, status=Sms.STATUS_ALL, memory=None):\n        \"\"\" Returns SMS message identifiers currently stored on the device/SIM card.\n        \n        The message identifiers are read from the memory set by the \"memory\" parameter.\n        \n        :param status: Filter messages based on this read status; must be 0-4 (see Sms class)\n        :type status: int\n        :param memory: The memory type to read from. If None, use the current default messages read memory\n        :type memory: str or None\n        \n        :return: A list of message identifiers\n        :rtype: list\n        \"\"\"\n        \n        if not memory:\n            memory = self.defaultSmsReadMemory\n        \n        raise NotImplementedError()\n    \n    \n    def sendSms(self, number, content):\n        \"\"\" Send an SMS message.\n        \n        :param number: The target phone number\n        :type number: str\n        :param content: The content of the SMS message\n        :type content: str\n        \n        :return: The sent message id\n        :rtype: int\n        \"\"\"\n        \n        raise NotImplementedError()\n    \n    \n    def deleteSms(self, id):\n        \"\"\" Delete an SMS message.\n        \n        :param id: The message id\n        :type id: int\n        \n        :return: True if the message was successfully deleted, False otherwise\n        :rtype: bool\n        \"\"\"\n        \n        raise NotImplementedError()\n    \n    \n    def deleteAllSms(self):\n        \"\"\" Delete all SMS messages.\n        \n        :return: True if the messages were successfully deleted, False otherwise\n        :rtype: bool\n        \"\"\"\n        \n        raise NotImplementedError()\n    \n    \n    def setDefaultSmsReadMemory(self, memory):\n        \"\"\" Sets the default memory to read SMS messages from.\n        \n        :param memory: The default memory\n        :type memory: str\n        \"\"\"\n        \n        self.defaultSmsReadMemory = memory\n    \n    \n    def setDefaultSmsSendMemory(self, memory):\n        \"\"\" Sets the default memory to send SMS messages to.\n        \n        :param memory: The default memory\n        :type memory: str\n        \"\"\"\n        \n        self.defaultSmsSendMemory = memory\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}