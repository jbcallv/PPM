{"name": "hosford42_xcs_BitString.random", "language": "py", "prompt": "def random(cls, length, bit_prob=.5):\n        \"\"\"Create a bit length of the given length, with the probability of\n        each bit being set equal to bit_prob, which defaults to .5.\n\n        Usage:\n            # Create a random BitString of length 10 with mostly zeros.\n            bits = BitString.random(10, bit_prob=.1)\n\n        Arguments:\n            length: An int, indicating the desired instance of the result.\n            bit_prob: A float in the range [0, 1]. This is the probability\n                of any given bit in the result having a value of 1; default\n                is .5, giving 0 and 1 equal probabilities of appearance for\n                each bit's value.\n        Return:\n            A randomly generated BitString instance of the requested\n            length.\n        \"\"\"", "tests": "", "completions": ["\n        return cls.from_bitstring(''.join(\n            str(random.random() < bit_prob) for _ in range(length)))\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}