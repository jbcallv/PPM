{"name": "jfinkels_birkhoff_to_bipartite_matrix", "language": "py", "prompt": "def to_bipartite_matrix(A):\n    \"\"\"Returns the rows matrix of a bipartite graph whose biadjacency\n    matrix is `A`.\n\n    `A` must be a NumPy array.\n\n    If `A` has **m** rows and **n** columns, then the returned matrix has **m +\n    n** return and columns.\n\n    \"\"\"", "tests": "", "completions": ["\n    if A.shape[0]!= A.shape[1]:\n        raise ValueError('A must be square')\n    n, m = A.shape\n    return block_diag(A, np.zeros((m, n - m)))\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}