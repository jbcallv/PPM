{"name": "ARMmbed_mbed-cloud-sdk-python_AggregatorAccountAdminApi.get_groups_of_account_user", "language": "py", "prompt": "def get_groups_of_account_user(self, account_id, user_id, **kwargs):  # noqa: E501\n        \"\"\"Get groups of the user.  # noqa: E501\n\n        An ' for retrieving groups of the user.   **Example usage:** `curl https://api.us-east-1.mbedcloud.com/v3/accounts/{accountID}/users/{user-id}/groups -H 'Authorization: api API_KEY'`  # noqa: E501\n        This method makes a synchronous HTTP request by default. To make an\n        anonymous HTTP request, please pass asynchronous=True\n        >>> thread = api.get_groups_of_account_user(account_id, user_id, asynchronous=True)\n        >>> result = thread.get()\n\n        :param asynchronous bool\n        :param str account_id: Account ID. (required)\n        :param str user_id: The ID of the user whose details are retrieved. (required)\n        :param int limit: The number of results to return (2-1000), default is 50.\n        :param str after: The entity ID to fetch after the given one.\n        :param str order: The order of the records based on creation time, ASC or DESC; by default ASC\n        :param str include: Comma separated additional data to return. Currently supported: total_count\n        :return: GroupSummaryList\n                 If the method is called asynchronously,\n                 returns the request thread.\n        \"\"\"", "tests": "", "completions": ["\n        kwargs['_return_http_data_only'] = True\n        if kwargs.get('asynchronous'):\n            return self.get_groups_of_account_user_with_http_info(account_id, user_id, **kwargs)  # noqa: E501\n        else:\n            (data) = self.get_groups_of_account_user_with_http_info(account_id, user_id, **kwargs)  # noqa: E501\n            return data\n\n    def get_groups_of_account_user_with_http_info(self, account_id, user_id, **kwargs):  # noqa: E501\n        \"\"\"Get groups of the user.  # noqa: E501\n\n        An ' for retrieving groups of the user.   **Example usage:** `curl https://api.us-east-1.mbedcloud.com/v3/accounts/{accountID}/users/{user-id}/groups -H 'Authorization: api API_KEY'`  # noqa: E501\n        This method makes a synchronous HTTP request by default. To make an\n        anonymous HTTP request, please pass asynchronous=True\n        >>> thread = api.get_groups_of_account_user_with_http_info(account_id, user_id, asynchronous=True)\n        >>> result = thread.get()\n\n        :param asynchronous bool\n        :param str account_id: Account ID. (required)\n        :param str user_id: The ID of the user whose details are retrieved. (required)\n        :param int limit: The number of results to return (2-1000), default is 50.\n        :param str after: The entity ID to fetch after the given one.\n        :param str order: The order of the records based on creation time, ASC or DESC; by default ASC\n        :param str include: Comma separated additional data to return. Currently supported: total_count\n        :return: GroupSummaryList\n                 If the method is called asynchronously,\n                 returns the request thread.\n        \"\"\"\n\n        all_params = ['account_id', 'user_id', 'limit', 'after', 'order', 'include']  # noqa: E501\n        all_params.append('asynchronous')\n        all_params.append('_return_http_data_only')\n        all_params.append('_preload_"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}