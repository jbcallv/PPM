{"name": "sebdah_dynamic-dynamodb_increase_reads_in_units", "language": "py", "prompt": "def increase_reads_in_units(\n        current_provisioning, units, max_provisioned_reads,\n        consumed_read_units_percent, log_tag):\n    \"\"\" Increase the current_provisioning with units units\n\n    :type current_provisioning: int\n    :param current_provisioning: The int provisioning\n    :type units: int\n    :param units: How many units should we increase with\n    :returns: current -- New provisioning value\n    :type max_provisioned_reads: int\n    :param max_provisioned_reads: Configured max provisioned reads\n    :returns: int -- New provisioning value\n    :type consumed_read_units_percent: float\n    :param consumed_read_units_percent: Number of consumed _ units\n    :type log_tag: str\n    :param log_tag: Prefix for the log\n    \"\"\"", "tests": "", "completions": ["\n    if units == 0:\n        return current_provisioning\n\n    new_provisioning = current_provisioning + units\n    if new_provisioning > max_provisioned_reads:\n        log.info(\"%s - New provisioning %s is greater than max \"\n                 \"provisioned reads %s. Setting it to \"\n                 \"max_provisioned_reads\" % (log_tag, new_provisioning,\n                                            max_provisioned_reads))\n        new_provisioning = max_provisioned_reads\n\n    # If we have a high percentage of consumed read units, do not increase\n    # the provisioning\n    if consumed_read_units_percent > 90.0:\n        log.info(\"%s - Consumed read units percent %s is greater than \"\n                 \"90%%. Current provisioning is %s. Not increasing \"\n                 \"provisioning\" % (log_tag, consumed_read_units_percent,\n                                   current_provisioning))\n        return current_provisioning\n\n    return new_provisioning\n\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}