{"name": "Azure_azure-sdk-for-python_AutoLockRenew.register", "language": "py", "prompt": "def register(self, renewable, timeout=300):\n        \"\"\"Register a renewable entity for automatic lock renewal.\n\n        :param renewable: A locked entity that needs to be renewed.\n        :type renewable: ~azure.servicebus.aio.async_message.Message or\n         ~azure.servicebus.aio.async_receive_handler.SessionReceiver\n        :param timeout: values time in seconds that the lock should be maintained for.\n         the value is 300 (5 minutes).\n        :type timeout: int\n        \"\"\"", "tests": "", "completions": ["\n        pass  # pragma: no cover\n\n    def unregister(self, renewable):\n        \"\"\"Unregister a renewable entity.\n\n        :param renewable: A locked entity that needs to be unregistered.\n        :type renewable: ~azure.servicebus.aio.async_message.Message or\n         ~azure.servicebus.aio.async_receive_handler.SessionReceiver\n        \"\"\"\n        pass  # pragma: no cover\n\n    async def close(self):\n        \"\"\"Close down the renewer.\n\n        This will shutdown all tasks and close all open sockets.\n        \"\"\"\n        pass  # pragma: no cover\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}