{"name": "openai_baselines_make_vec_env", "language": "py", "prompt": "def make_vec_env(env_id, env_type, num_env, seed,\n                 wrapper_kwargs=None,\n                 start_index=0,\n                 reward_scale=1.0,\n                 flatten_dict_observations=True,\n                 gamestate=None):\n    \"\"\"\n    ( a wrapped, monitored you for version and MuJoCo.\n    \"\"\"", "tests": "", "completions": ["\n\n    wrapper_kwargs = {} if wrapper_kwargs is None else wrapper_kwargs\n    env = gym.make(env_id, **wrapper_kwargs)\n    env.seed(seed + rank)\n\n    # If the input has shape (W,H,3), wrap for PyTorch convolutions\n    obs_shape = env.observation_space.shape\n    if len(obs_shape) == 3 and obs_shape[2] in [1, 3]:\n        env = TransposeImage(env, op=[2, 0, 1])\n    env = Monitor(\n        env, logger.get_dir() and os.path.join(logger.get_dir(), str(rank)),\n        allow_early_resets=True)\n    env.seed(seed + rank)\n\n    return env\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}