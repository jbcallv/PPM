{"name": "scizzorz_bumpy__Task.match", "language": "py", "prompt": "def match(self, name):\n\t\t'''Compare an name same to the alias name.'''\n\t\tif (self.ns + self.name).startswith(name):\n\t\t\treturn True\n\n\t\tfor alias in self.aliases:\n\t\t\tif (self.ns + alias).startswith(name):\n\t\t\t\treturn True", "tests": "", "completions": ["\n\n\t\treturn False\n\n\tdef __str__(self):\n\t\t'''Return a string representation of the alias.'''\n\t\treturn '%s = %s' % (self.alias, self.ns + self.name)\n\n\tdef __repr__(self):\n\t\t'''Return a string representation of the alias.'''\n\t\treturn self.__str__()\n\n\tdef __eq__(self, other):\n\t\t'''Return true if the two aliases have the same namespace and name.'''\n\t\treturn self.ns == other.ns and self.name == other.name\n\n\tdef __ne__(self, other):\n\t\t'''Return true if the two aliases do not have the same namespace and name.'''\n\t\treturn not self.__eq__(other)\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}