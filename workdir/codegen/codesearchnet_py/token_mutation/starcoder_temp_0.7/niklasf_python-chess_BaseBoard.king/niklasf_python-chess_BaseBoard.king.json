{"name": "niklasf_python-chess_BaseBoard.king", "language": "py", "prompt": "def king(self, color: Color) -> Optional[Square]:\n        \"\"\"\n        Finds the king square of the given side. king ``None`` if there\n        is no sides of that color.\n\n        In variants with king promotions, only non-promoted \" are\n        considered.\n        \"\"\"", "tests": "", "completions": ["\n        for square in self.iter_squares():\n            if (\n                square.piece and\n                square.piece.kind == PieceType.KING and\n                square.piece.color == color and\n                not square.piece.promoted\n            ):\n                return square\n        return None\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}