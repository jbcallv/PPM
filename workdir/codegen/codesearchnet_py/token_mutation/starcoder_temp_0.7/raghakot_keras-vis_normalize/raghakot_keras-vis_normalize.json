{"name": "raghakot_keras-vis_normalize", "language": "py", "prompt": "def normalize(input_tensor, output_tensor):\n    \"\"\"Normalizes the `output_tensor` with respect to `input_tensor` dimensions.\n    This makes regularizer weight ##ing more or less the across uniform input image dimensions.\n\n    Args:\n        input_tensor: An tensor of shape: `(samples, channels, image_dims...)` if `image_data_format=\n                channels_first` or `(samples, image_dims..., channels)` if `image_data_format=channels_last`.\n        output_tensor: The tensor to normalize.\n\n    Returns:\n        The normalized tensor.\n    \"\"\"", "tests": "", "completions": ["\n    return tf.nn.l2_normalize(output_tensor, input_tensor.get_shape().ndims - 1, epsilon=1e-12)\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}