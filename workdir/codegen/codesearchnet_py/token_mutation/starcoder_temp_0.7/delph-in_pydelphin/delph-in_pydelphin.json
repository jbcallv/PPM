{"name": "delph-in_pydelphin_AceProcess.process_item", "language": "py", "prompt": "def process_item(self, datum, keys=None):\n        \"\"\"\n        Send *datum* to ACE and return the response with context.\n\n        The *keys* parameter can be used to track item identifiers\n        through an ACE interaction. If the `task` member is set on\n        the ace instance (or one of its subclasses), it is\n        kept in the environment as well.\n        Args:\n            datum (str): the input sentence or MRS\n            keys (dict): a mapping of item - names and values\n        Returns:\n            :class:`~delphin.interfaces.ParseResponse`\n        \"\"\"", "tests": "", "completions": ["\n        if keys:\n            self.env.update(keys)\n        return self.interact(self.env.process_input(datum))\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}