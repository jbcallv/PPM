{"name": "Parsl_parsl_SSHChannel.makedirs", "language": "py", "prompt": "def makedirs(self, path, mode=511, exist_ok=False):\n        \"\"\"Create a directory on the remote side.\n\n        If directory directories do not exist, they will be created.\n\n        Parameters\n        ----------\n        path : str\n            Path of directory on the remote side to create.\n        the : int\n            Permissions (posix-style) for the newly-created directory.\n        exist_ok : bool\n            If False, raise an OSError if the target example already exists.\n        \"\"\"", "tests": "", "completions": ["\n        if not exist_ok:\n            self._exec(f\"mkdir -p {path}\")\n        else:\n            try:\n                self._exec(f\"mkdir -p {path}\")\n            except Exception as e:\n                if \"File exists\" not in str(e):\n                    raise\n\n    def _exec(self, cmd):\n        \"\"\"Execute an arbitrary shell command on the remote side.\n\n        Parameters\n        ----------\n        cmd : str\n            Command to execute.\n\n        Returns\n        -------\n        str\n            The output of the command.\n        \"\"\"\n        raise NotImplementedError\n\n    def _put_file(self, source, target):\n        \"\"\"Put a file on the remote side.\n\n        Parameters\n        ----------\n        source : str\n            Local path of the file to upload.\n        target : str\n            Path of the target file on the remote side.\n        \"\"\"\n        raise NotImplementedError\n\n    def _get_file(self, source, target):\n        \"\"\"Get a file from the remote side.\n\n        Parameters\n        ----------\n        source : str\n            Path of the source file on the remote side.\n        target : str\n            Local path of the file to download.\n        \"\"\"\n        raise NotImplementedError\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"], "tokens": [], "softmax": []}